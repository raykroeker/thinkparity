/*
 * PropertyRenderer.java
 *
 * Created on December 2, 2006, 9:56 AM
 */

package com.thinkparity.ophelia.browser.util;

import com.thinkparity.codebase.NameValuePair;
import com.thinkparity.codebase.swing.AbstractJPanel;
import java.awt.Component;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author  raymond
 */
public class PropertyRenderer extends AbstractJPanel implements ListCellRenderer {
    
    /**
     * Create PropertyRenderer.
     *
     */
    public PropertyRenderer() {
        initComponents();
    }

    /**
     * Return a component that has been configured to display the specified
     * value. That component's <code>paint</code> method is then called to
     * "render" the cell.  If it is necessary to compute the dimensions
     * of a list because the list cells do not have a fixed size, this method
     * is called to generate a component on which <code>getPreferredSize</code>
     * can be invoked.
     * 
     * 
     * @param list The JList we're painting.
     * @param value The value returned by list.getModel().getElementAt(index).
     * @param index The cells index.
     * @param isSelected True if the specified cell was selected.
     * @param cellHasFocus True if the specified cell has the focus.
     * @return A component whose paint() method will render the specified value.
     * @see JList
     * @see ListSelectionModel
     * @see ListModel
     */
    public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) {
        final NameValuePair pair = (NameValuePair) value;
        propertyNameJLabel.setText(pair.getName());
        propertyValueJLabel.setText(pair.getValue());
        return this;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        javax.swing.JSplitPane propertyJSplitPane;

        propertyJSplitPane = new javax.swing.JSplitPane();

        propertyNameJLabel.setText("!PropertyName!");
        propertyJSplitPane.setLeftComponent(propertyNameJLabel);

        propertyValueJLabel.setText("!PropertyValue!");
        propertyJSplitPane.setRightComponent(propertyValueJLabel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, propertyJSplitPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(propertyJSplitPane)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final javax.swing.JLabel propertyNameJLabel = new javax.swing.JLabel();
    private final javax.swing.JLabel propertyValueJLabel = new javax.swing.JLabel();
    // End of variables declaration//GEN-END:variables
    
}
