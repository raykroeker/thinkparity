/*
 * LoginAvatar.java
 *
 * March 16, 2006, 8:14 PM
 */
package com.thinkparity.browser.platform.login.ui;

import javax.swing.SwingUtilities;

import com.thinkparity.browser.application.browser.BrowserConstants;
import com.thinkparity.browser.application.browser.component.ButtonFactory;
import com.thinkparity.browser.application.browser.component.LabelFactory;
import com.thinkparity.browser.application.browser.component.TextFactory;
import com.thinkparity.browser.application.browser.display.avatar.AvatarId;
import com.thinkparity.browser.platform.application.display.avatar.Avatar;
import com.thinkparity.browser.platform.util.State;
import com.thinkparity.browser.platform.util.SwingUtil;

/**
 * The avatar displayed on the login window.
 *
 * @author raykroeker@gmail.com
 * @version 1.1
 */
public class LoginAvatar extends Avatar {

	/**
	 * @see java.io.Serializable
	 * 
	 */
	private static final long serialVersionUID = 1;

	/**
	 * Creates new form LoginAvatar
	 * 
	 */
	public LoginAvatar() {
		super("LoginAvatar", BrowserConstants.DIALOGUE_BACKGROUND);
		initComponents();
	}

	/**
	 * @see com.thinkparity.browser.javax.swing.AbstractJPanel#isInputValid()
	 * 
	 */
	public Boolean isInputValid() {
		final String username = extractUsername();
		if(null == username || 1 > username.length()) { return Boolean.FALSE; }

		final String password = extractPassword();
		if(null == password || 1 > password.length()) { return Boolean.FALSE; }

		if(errors.size() > 0) { return Boolean.FALSE; }

		return Boolean.TRUE;
	}

	public Boolean extractSavePassword() { return Boolean.FALSE; }

	public String extractPassword() {
		return SwingUtil.extract(passwordJPasswordField);
	}

	public String extractUsername() {
		return SwingUtil.extract(usernameJTextField);
	}

	public AvatarId getId() {
		return AvatarId.PLATFORM_LOGIN;
	}

	public State getState() { return null; }

	public void setState(final State state) {}

	/**
	 * Reload the avatar. This event is called when either the content provider
	 * or the input has changed; or as a manual reload of the avatar.
	 */
	public void reload() {
		if(getPreferences().isSetUsername()) {
			usernameJTextField.setText(getPreferences().getUsername());
			usernameJTextField.setEnabled(false);
		}
		else { usernameJTextField.setEnabled(true); }
        passwordJPasswordField.setText("");
		if(containsErrors()) {
			//infoJLabel.setText(extractErrorMessage());
			clearErrors();
		}
	}

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        javax.swing.JButton cancelJButton;
        java.awt.GridBagConstraints gridBagConstraints;
        javax.swing.JButton loginJButton;
        javax.swing.JLabel paddingJLabel;
        javax.swing.JLabel passwordJLabel;
        javax.swing.JLabel usernameJLabel;

        usernameJLabel = LabelFactory.create(getString("UsernameLabel"));
        usernameJTextField = TextFactory.create();
        passwordJLabel = LabelFactory.create(getString("PasswordLabel"));
        passwordJPasswordField = TextFactory.createPassword();
        loginJButton = ButtonFactory.create(getString("LoginButton"));
        cancelJButton = ButtonFactory.create(getString("CancelButton"));
        paddingJLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(22, 11, 3, 3);
        add(usernameJLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(22, 3, 3, 22);
        add(usernameJTextField, gridBagConstraints);

        passwordJLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                passwordJLabelMouseClicked(e);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 3);
        add(passwordJLabel, gridBagConstraints);

        passwordJPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                passwordJPasswordFieldActionPerformed(e);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 22);
        add(passwordJPasswordField, gridBagConstraints);

        loginJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                loginJButtonActionPerformed(e);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 3);
        add(loginJButton, gridBagConstraints);

        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                cancelJButtonActionPerformed(e);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(11, 3, 0, 22);
        add(cancelJButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(paddingJLabel, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void passwordJLabelMouseClicked(java.awt.event.MouseEvent e) {//GEN-FIRST:event_passwordJLabelMouseClicked
    }//GEN-LAST:event_passwordJLabelMouseClicked

	private void passwordJPasswordFieldActionPerformed(java.awt.event.ActionEvent e) {//GEN-FIRST:event_passwordJPasswordFieldActionPerformed
	    loginJButtonActionPerformed(e);
	}//GEN-LAST:event_passwordJPasswordFieldActionPerformed

	private void cancelJButtonActionPerformed(java.awt.event.ActionEvent e) {//GEN-FIRST:event_cancelJButtonActionPerformed
	    passwordJPasswordField.setText("");
		SwingUtilities.getWindowAncestor(this).dispose();
	}//GEN-LAST:event_cancelJButtonActionPerformed

	private void loginJButtonActionPerformed(java.awt.event.ActionEvent e) {//GEN-FIRST:event_loginJButtonActionPerformed
	    if(isInputValid()) { SwingUtilities.getWindowAncestor(this).dispose(); }
	}//GEN-LAST:event_loginJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
