/*
 * Nov 10, 2005
 */
package com.thinkparity.ophelia.model.document;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import com.thinkparity.codebase.model.document.Document;

import com.thinkparity.ophelia.model.util.Opener;

import com.thinkparity.ophelia.OpheliaTestUser;

/**
 * Test the document model open api.
 * 
 * @author raymond@raykroeker.com
 * @version 1.1.2.2
 */
public class OpenTest extends DocumentTestCase {

	/** Test data. */
	private List<Fixture> data;

	/**
	 * Create OpenTest.
     * 
	 */
	public OpenTest() { super("testOpen"); }

	/**
	 * Test the document model open api.
	 *
	 */
	public void testOpen() {
        for (final Fixture datum : data) {
            final Opener opener = new Opener() {
                public void open(final File file) {
                    assertNotNull("File to open is null.", file);
                    assertTrue("File to open does not exist.", file.exists());
                    assertEquals("File size is incorrect.", datum.file.length(), file.length());
                }
            };
            datum.documentModel.open(datum.documentId, opener);
		}
	}

	/**
	 * @see junit.framework.TestCase#setUp()
	 */
	protected void setUp() throws Exception {
		super.setUp();
		final DocumentModel documentModel = getDocumentModel(OpheliaTestUser.JUNIT);
		data = new ArrayList<Fixture>(4);

        Document document;
		for (final File testFile : getInputFiles()) {
            document = create(OpheliaTestUser.JUNIT, testFile);
            data.add(new Fixture(document.getId(), documentModel, testFile));
        }
    }

	/**
	 * @see junit.framework.TestCase#tearDown()
	 */
	protected void tearDown() throws Exception {
		data.clear();
		data = null;
		super.tearDown();
	}

	/**
	 * Test data fixture.
	 * 
	 * @see OpenTest#setUp()
	 * @see OpenTest#tearDown()
	 */
	private class Fixture {
		private final Long documentId;
		private final DocumentModel documentModel;
        private final File file;
		private Fixture(final Long documentId,
                final DocumentModel documentModel, final File file) {
			this.documentId = documentId;
			this.documentModel = documentModel;
            this.file = file;
		}
	}
}
