/*
 * WindowTitle.java
 *
 * Created on March 31, 2006, 5:43 PM
 */

package com.thinkparity.browser.platform.application.window;

import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.event.MouseEvent;

import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.event.MouseInputAdapter;

/**
 * The title bar of all thinkparity platform windows. Contains a simple gradient
 * paint and an invisible button to control its height.
 * 
 * @author raykroeker@gmail.com
 * @version 1.1
 */
class WindowTitle extends JPanel {

	/** @see java.io.Serializable */
	private static final long serialVersionUID = 1;

    /** The source colour of the gradient. */
    private static final Color GRADIENT_PAINT_COLOUR_1 = new Color(224, 228, 233, 255);

    /** The target colour of the gradient. */
    private static final Color GRADIENT_PAINT_COLOUR_2 = new Color(185, 192, 199, 255);

    /** The colour of the single line below the title deocration. */
    private static final Color TITLE_BOTTOM_BORDER_COLOUR = new Color(153, 153, 153, 255);

    /** Create a WindowTitle. */
    WindowTitle() {
    	super();
        /* Create an input adapter capable of moving the window around. */
    	final MouseInputAdapter mouseInputAdapter = new MouseInputAdapter() {
    		int offsetX;
    		int offsetY;
                public void mouseDragged(final MouseEvent e) {
                    final java.awt.Window window = SwingUtilities.getWindowAncestor(WindowTitle.this);
                    final Point newL = window.getLocation();
                    newL.x += e.getPoint().x - offsetX;
                    newL.y += e.getPoint().y - offsetY;
                    window.setLocation(newL);
                }
                public void mousePressed(final MouseEvent e) {
                    offsetX = e.getPoint().x;
                    offsetY = e.getPoint().y;
                }
    	};
    	addMouseListener(mouseInputAdapter);
    	addMouseMotionListener(mouseInputAdapter);
        initComponents();
    }

    /** @see javax.swing.JComponent#paintComponent(java.awt.Graphics) */
    protected void paintComponent(final Graphics g) {
        Graphics2D g2 = (Graphics2D) g.create();
        try {
            // a single vertical gradient
            final Paint gPaint =
                new GradientPaint(0, 0, GRADIENT_PAINT_COLOUR_1, 0, getHeight(), GRADIENT_PAINT_COLOUR_2);
            g2.setPaint(gPaint);
            g2.fillRect(0, 0, getWidth(), getHeight());
        }
        finally { g2.dispose(); }

        g2 = (Graphics2D) g.create();
        try {
          g2.setColor(TITLE_BOTTOM_BORDER_COLOUR);
          g2.drawLine(0, getHeight() - 1, getWidth(), getHeight() - 1);
        }
        finally { g2.dispose(); }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        fillJLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        fillJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Invisible13x13.png")));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        add(fillJLabel, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fillJLabel;
    // End of variables declaration//GEN-END:variables
}
