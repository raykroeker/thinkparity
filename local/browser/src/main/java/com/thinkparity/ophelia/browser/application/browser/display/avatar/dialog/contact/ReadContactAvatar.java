/*
 * Created On: June 29, 2006, 5:47 PM
 */
package com.thinkparity.ophelia.browser.application.browser.display.avatar.dialog.contact;

import java.util.List;

import com.thinkparity.codebase.email.EMail;
import com.thinkparity.codebase.jabber.JabberId;
import com.thinkparity.codebase.model.contact.Contact;


import com.thinkparity.ophelia.browser.application.browser.BrowserConstants;
import com.thinkparity.ophelia.browser.application.browser.display.avatar.AvatarId;
import com.thinkparity.ophelia.browser.application.browser.display.provider.SingleContentProvider;
import com.thinkparity.ophelia.browser.platform.action.Data;
import com.thinkparity.ophelia.browser.platform.application.display.avatar.Avatar;
import com.thinkparity.ophelia.browser.platform.util.State;


/**
 *
 * @author rob_masako@shaw.ca
 */
public class ReadContactAvatar extends Avatar {
    
    /** @see java.io.Serializable */
    private static final long serialVersionUID = 1;
    
    /** Creates new form ContactInfo */
    public ReadContactAvatar() {
        super("ContactInfo", BrowserConstants.DIALOGUE_BACKGROUND);
        initComponents();
        contactInfoJPanel.setBackground(BrowserConstants.DIALOGUE_BACKGROUND);
    }

    public void setState(final State state) {
    }

    public State getState() {
        return null;
    }
    
    /**
     * Obtain the contact.
     *
     * @return The contact.
     */
    private Contact getContact(JabberId contactId) {
        return (Contact) ((SingleContentProvider) contentProvider)
                .getElement((Object)contactId);
    }

    
    public void reload() {
        // Clear controls for contact name, company, and email
        nameJTextField.setText("");
        companyJTextField.setText("");
        emailJTextField.setText("");
        titleJTextField.setText("");
        
        // Get the contact id from Data, populate controls to show
        // contact name, company and email
        JabberId id = getInputContactId();
        if (id != null) {
            final Contact contact = getContact(id);
            if (contact != null) {
                nameJTextField.setText(contact.getName());
                companyJTextField.setText(contact.getOrganization());
                titleJTextField.setText(contact.getTitle());
                final List<EMail> emails = contact.getEmails();
                if (0 < emails.size()) {
                    emailJTextField.setText(emails.get(0).toString());
                }
            }
        }
        
        closeJButton.requestFocusInWindow();
    }

    public AvatarId getId() {
        return AvatarId.DIALOG_CONTACT_READ;
    }
    
    /**
     * Obtain the input contact id.
     *
     * @return A contact id.
     */
    private JabberId getInputContactId() {
        if (input!=null) {
            return (JabberId) ((Data) input).get(DataKey.CONTACT_ID);
        }
        else {
            return null;
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        closeJButton = new javax.swing.JButton();
        contactInfoJPanel = new javax.swing.JPanel();
        nameJLabel = new javax.swing.JLabel();
        companyJLabel = new javax.swing.JLabel();
        emailJLabel = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        companyJTextField = new javax.swing.JTextField();
        emailJTextField = new javax.swing.JTextField();
        titleJLabel = new javax.swing.JLabel();
        titleJTextField = new javax.swing.JTextField();

        closeJButton.setText(java.util.ResourceBundle.getBundle("localization/JPanel_Messages").getString("ContactInfoDialog.Close"));
        closeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                closeJButtonActionPerformed(e);
            }
        });

        contactInfoJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(java.util.ResourceBundle.getBundle("localization/JPanel_Messages").getString("ContactInfoDialog.BorderTitle")));
        nameJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameJLabel.setText(java.util.ResourceBundle.getBundle("localization/JPanel_Messages").getString("ContactInfoDialog.Name"));

        companyJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        companyJLabel.setText(java.util.ResourceBundle.getBundle("localization/JPanel_Messages").getString("ContactInfoDialog.Company"));

        emailJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        emailJLabel.setText(java.util.ResourceBundle.getBundle("localization/JPanel_Messages").getString("ContactInfoDialog.Email"));

        nameJTextField.setEditable(false);
        nameJTextField.setFocusable(false);

        companyJTextField.setEditable(false);
        companyJTextField.setFocusable(false);

        emailJTextField.setEditable(false);
        emailJTextField.setFocusable(false);

        titleJLabel.setText(java.util.ResourceBundle.getBundle("localization/JPanel_Messages").getString("ContactInfoDialog.TitleLabel"));

        titleJTextField.setEditable(false);

        org.jdesktop.layout.GroupLayout contactInfoJPanelLayout = new org.jdesktop.layout.GroupLayout(contactInfoJPanel);
        contactInfoJPanel.setLayout(contactInfoJPanelLayout);
        contactInfoJPanelLayout.setHorizontalGroup(
            contactInfoJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(contactInfoJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(contactInfoJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, contactInfoJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, companyJLabel)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, titleJLabel)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, emailJLabel))
                    .add(nameJLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(contactInfoJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(nameJTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .add(companyJTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .add(titleJTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .add(emailJTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))
                .addContainerGap())
        );
        contactInfoJPanelLayout.setVerticalGroup(
            contactInfoJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(contactInfoJPanelLayout.createSequentialGroup()
                .add(contactInfoJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(nameJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(nameJLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(contactInfoJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(companyJLabel)
                    .add(companyJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(contactInfoJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(titleJLabel)
                    .add(titleJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(5, 5, 5)
                .add(contactInfoJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(emailJLabel)
                    .add(emailJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, contactInfoJPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(closeJButton))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(contactInfoJPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(closeJButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void closeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeJButtonActionPerformed
        disposeWindow();
    }//GEN-LAST:event_closeJButtonActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeJButton;
    private javax.swing.JLabel companyJLabel;
    private javax.swing.JTextField companyJTextField;
    private javax.swing.JPanel contactInfoJPanel;
    private javax.swing.JLabel emailJLabel;
    private javax.swing.JTextField emailJTextField;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JTextField titleJTextField;
    // End of variables declaration//GEN-END:variables
    
    public enum DataKey { CONTACT_ID }
}
