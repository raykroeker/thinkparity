/*
 * Jan 18, 2006
 */
package com.thinkparity.browser.javax.swing.document;

import java.awt.event.ActionEvent;
import java.io.File;

import javax.swing.JFileChooser;

import com.thinkparity.browser.javax.swing.AbstractJPanel;
import com.thinkparity.browser.javax.swing.browser.Controller;
import com.thinkparity.browser.javax.swing.browser.MainJPanel;
import com.thinkparity.browser.javax.swing.component.BrowserButtonFactory;
import com.thinkparity.browser.javax.swing.util.SwingUtil;

import com.thinkparity.model.parity.ParityException;
import com.thinkparity.model.parity.model.document.DocumentModel;

/**
 * @author raykroeker@gmail.com
 * @version 1.1
 */
public class NewDocumentJPanel extends AbstractJPanel {

	/**
	 * @see java.io.Serializable
	 */
	private static final long serialVersionUID = 1;

	/**
	 * Handle to the browser controller.
	 * 
	 */
	protected final Controller controller =
		Controller.getInstance();

	protected final DocumentModel documentModel = getDocumentModel();
	// Variables declaration - do not modify
    private javax.swing.JButton browseJButton;
	private javax.swing.JButton cancelJButton;
	private javax.swing.JLabel documentJLabel;
    private javax.swing.JTextField documentPathJTextField;
    private javax.swing.JLabel errorJLabel;
    private javax.swing.JLabel fillJLabel0;
    private javax.swing.JLabel fillJLabel1;
    private javax.swing.JLabel fillJLabel2;
    private javax.swing.JLabel fillJLabel3;
    private javax.swing.JLabel fillJLabel4;
    private javax.swing.JLabel fillJLabel5;

    private JFileChooser jFileChooser;

    private javax.swing.JButton okJButton;
    // End of variables declaration

    /**
	 * Create a NewDocumentJPanel.
	 */
	public NewDocumentJPanel(final MainJPanel jPanel) {
		super("NewDocumentJPanel");
		initComponents();
	}


    private void browseJButtonActionPerformed(final ActionEvent e) {
    	if(null == jFileChooser) { jFileChooser = new JFileChooser(); }
    	final int returnValue = jFileChooser.showOpenDialog(this);
    	if(returnValue == JFileChooser.APPROVE_OPTION) {
    		setDocumentPathText(jFileChooser.getSelectedFile().getAbsolutePath());
    		setDocumentToolTipText(jFileChooser.getSelectedFile().getAbsolutePath());
    	}
    }

    private void cancelJButtonActionPerformed(final ActionEvent e) {
		controller.showDocumentList();
	}
    private String extractDocumentPath() {
    	return SwingUtil.extract(documentPathJTextField);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        fillJLabel0 = new javax.swing.JLabel();
        fillJLabel1 = new javax.swing.JLabel();
        fillJLabel2 = new javax.swing.JLabel();
        fillJLabel3 = new javax.swing.JLabel();
        fillJLabel4 = new javax.swing.JLabel();
        fillJLabel5 = new javax.swing.JLabel();
        documentJLabel = new javax.swing.JLabel();
        documentPathJTextField = new javax.swing.JTextField();
        browseJButton = BrowserButtonFactory.create("");
        errorJLabel = new javax.swing.JLabel();
        cancelJButton = BrowserButtonFactory.create("");
        okJButton = BrowserButtonFactory.create("");

        setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.weighty = 0.25;
        add(fillJLabel0, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.45;
        add(fillJLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.45;
        add(fillJLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(25, 65, 25, 65);
        add(fillJLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.weighty = 0.75;
        add(fillJLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        add(fillJLabel5, gridBagConstraints);

        documentJLabel.setText("Document:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(documentJLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(documentPathJTextField, gridBagConstraints);

        browseJButton.setText("Browse...");
        browseJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseJButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(browseJButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(errorJLabel, gridBagConstraints);

        cancelJButton.setText("Cancel");
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(cancelJButton, gridBagConstraints);

        okJButton.setText("OK");
        okJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okJButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(okJButton, gridBagConstraints);

    }// </editor-fold>

    private void okJButtonActionPerformed(final ActionEvent e) {
    	try {
    		final File file = new File(extractDocumentPath());
    		documentModel.create(getProjectId(),
    				file.getName(), file.getName(), file);
    	}
    	catch(ParityException px) {
    		// NOTE Error Handler Code
    		logger.error("Could not create document.", px);
    	}
    }

    private void setDocumentPathText(final String documentPath) {
    	SwingUtil.set(documentPathJTextField, documentPath);
    }

    private void setDocumentToolTipText(final String documentPath) {
    	SwingUtil.setToolTip(documentPathJTextField, documentPath);
    }
}
