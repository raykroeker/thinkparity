/*
 * DisplayInfoPanel.java
 *
 * Created on March 14, 2007, 10:59 PM
 */

package com.thinkparity.ophelia.browser.application.system.dialog;

import java.awt.event.ActionEvent;

import javax.swing.AbstractAction;
import javax.swing.Icon;

import com.thinkparity.codebase.StringUtil;
import com.thinkparity.codebase.model.util.http.Link;

import com.thinkparity.ophelia.browser.Version;
import com.thinkparity.ophelia.browser.application.browser.BrowserConstants.Fonts;
import com.thinkparity.ophelia.browser.application.browser.component.LabelFactory;
import com.thinkparity.ophelia.browser.application.system.SystemApplication;
import com.thinkparity.ophelia.browser.util.ImageIOUtil;

/**
 *
 * @author  user
 */
public class DisplayInfoPanel extends SystemPanel {

    /** Close label icon. */
    private static final Icon CLOSE_ICON;

    /** Close label rollover icon. */
    private static final Icon CLOSE_ROLLOVER_ICON;

    static {
        CLOSE_ICON = ImageIOUtil.readIcon("Dialog_CloseButton.png");
        CLOSE_ROLLOVER_ICON = ImageIOUtil.readIcon("Dialog_CloseButtonRollover.png");
    }

    /** The system application. */
    private final SystemApplication systemApplication;

    /** Creates new form DisplayInfoPanel */
    public DisplayInfoPanel(final SystemApplication systemApplication) {
        super();
        this.systemApplication = systemApplication;
        initComponents();
        bindEscapeKey("Close", new AbstractAction() {
            public void actionPerformed(final ActionEvent e) {
                closeDisplayInfoPanel();
            }
        });
    }

    /**
     * Reload the display info panel.
     */
    public void reload() {
        reloadVersion();
        reloadWebPage();
    }

    /**
     * Close the panel.
     *
     */
    private void closeDisplayInfoPanel() {
        disposeWindow();
    }

    /**
     * Obtain localised text.
     *
     * @param localKey
     *      The local context key.
     * @return Localised text.
     */
    private String getString(final String localKey, final Object[] arguments) {
        return systemApplication.getString(localKey, arguments);
    }

    /**
     * Get the web page.
     * 
     * @return The web page <code>Link</code>.
     */
    private Link getWebPage() {
        return systemApplication.getWebPage();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        final javax.swing.JButton closeJButton = new javax.swing.JButton();
        final javax.swing.JLabel logoJLabel = new javax.swing.JLabel();
        final javax.swing.JLabel copyrightJLabel = new javax.swing.JLabel();
        final javax.swing.JPanel webPageJPanel = new javax.swing.JPanel();
        final javax.swing.JLabel fillLeftJLabel = new javax.swing.JLabel();
        final javax.swing.JLabel fillRightJLabel = new javax.swing.JLabel();

        closeJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Dialog_CloseButton.png")));
        closeJButton.setBorderPainted(false);
        closeJButton.setContentAreaFilled(false);
        closeJButton.setFocusPainted(false);
        closeJButton.setFocusable(false);
        closeJButton.setMaximumSize(new java.awt.Dimension(14, 14));
        closeJButton.setMinimumSize(new java.awt.Dimension(14, 14));
        closeJButton.setPreferredSize(new java.awt.Dimension(14, 14));
        closeJButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeJButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeJButtonMouseExited(evt);
            }
        });
        closeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeJButtonActionPerformed(evt);
            }
        });

        logoJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/thinkParityLogo.png")));
        logoJLabel.setFocusable(false);

        versionJLabel.setFont(Fonts.DialogFontBold);
        versionJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        versionJLabel.setText(java.util.ResourceBundle.getBundle("localization/Application_Messages").getString("SystemApplication.DisplayInfoPanel.Version"));

        copyrightJLabel.setFont(Fonts.DialogFont);
        copyrightJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        copyrightJLabel.setText(java.util.ResourceBundle.getBundle("localization/Application_Messages").getString("SystemApplication.DisplayInfoPanel.Copyright"));

        webPageJPanel.setLayout(new java.awt.GridBagLayout());

        webPageJPanel.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        webPageJPanel.add(fillLeftJLabel, gridBagConstraints);

        webPageJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        webPageJLabel.setText("!www.thinkparity.com!");
        webPageJLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                webPageJLabelMousePressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        webPageJPanel.add(webPageJLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        webPageJPanel.add(fillRightJLabel, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeJButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                    .addComponent(versionJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                    .addComponent(webPageJPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                    .addComponent(copyrightJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(closeJButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logoJLabel)
                .addGap(20, 20, 20)
                .addComponent(versionJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copyrightJLabel)
                .addGap(14, 14, 14)
                .addComponent(webPageJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void closeJButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeJButtonMouseEntered
        ((javax.swing.JButton) evt.getSource()).setIcon(CLOSE_ROLLOVER_ICON);
    }//GEN-LAST:event_closeJButtonMouseEntered

    private void closeJButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeJButtonMouseExited
        ((javax.swing.JButton) evt.getSource()).setIcon(CLOSE_ICON);
    }//GEN-LAST:event_closeJButtonMouseExited

    private void closeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeJButtonActionPerformed
        ((javax.swing.JButton) evt.getSource()).setIcon(CLOSE_ICON);
        closeDisplayInfoPanel();
    }//GEN-LAST:event_closeJButtonActionPerformed

    private void reloadVersion() {
        versionJLabel.setText(getString("DisplayInfoPanel.Version", new Object[] { Version.getVersion() }));
    }

    private void reloadWebPage() {
        // Display the web page string with "http:/" stripped off
        final String webPage = StringUtil.removeBefore(getWebPage().toString(), "//");
        webPageJLabel.setText(getString("DisplayInfoPanel.WebPage", new Object[] {webPage}));
    }

    private void webPageJLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_webPageJLabelMousePressed
        systemApplication.runOpenWebsite();
    }//GEN-LAST:event_webPageJLabelMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final javax.swing.JLabel versionJLabel = new javax.swing.JLabel();
    private final javax.swing.JLabel webPageJLabel = LabelFactory.createLink("",Fonts.DefaultFont);
    // End of variables declaration//GEN-END:variables
}
