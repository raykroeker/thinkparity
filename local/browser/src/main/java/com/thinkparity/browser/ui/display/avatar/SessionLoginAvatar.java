/*
 * Jan 26, 2006
 */
package com.thinkparity.browser.ui.display.avatar;

import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import com.thinkparity.browser.ui.component.ButtonFactory;
import com.thinkparity.browser.ui.component.CheckBoxFactory;
import com.thinkparity.browser.ui.component.LabelFactory;
import com.thinkparity.browser.ui.component.TextFactory;
import com.thinkparity.browser.util.State;
import com.thinkparity.browser.util.SwingUtil;

import com.thinkparity.codebase.PropertiesUtil;

import com.thinkparity.model.parity.ParityException;
import com.thinkparity.model.parity.api.events.SessionListener;
import com.thinkparity.model.parity.model.session.SessionModel;
import com.thinkparity.model.parity.model.workspace.Preferences;

/**
 * @author raykroeker@gmail.com
 * @version 1.1
 */
class SessionLoginAvatar extends Avatar {

	/**
	 * @see java.io.Serializable
	 * 
	 */
	private static final long serialVersionUID = 1;

	/**
	 * Parity preferences.
	 * 
	 */
	protected final Preferences preferences = getPreferences();

	/**
	 * Parity session api.
	 * 
	 */
	protected final SessionModel sessionModel = getSessionModel();

	private javax.swing.JPasswordField passwordJPasswordField;

	private javax.swing.JTextField usernameJTextField;

	/**
	 * Create a SessionLoginAvatar.
	 * 
	 */
	SessionLoginAvatar() {
		super("SessionLoginAvatar");
		setLayout(new GridBagLayout());
		initSessionLoginComponents();
	}

	/**
	 * @see com.thinkparity.browser.ui.display.avatar.Avatar#getId()
	 * 
	 */
	public AvatarId getId() { return AvatarId.SESSION_LOGIN; }

	/**
	 * @see com.thinkparity.browser.ui.display.avatar.Avatar#getState()
	 * 
	 */
	public State getState() {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * @see com.thinkparity.browser.ui.display.avatar.Avatar#setState(com.thinkparity.browser.util.State)
	 * 
	 */
	public void setState(State state) {
		// TODO Auto-generated method stub
	}

	private String extractPassword() {
		return SwingUtil.extract(passwordJPasswordField);
	}

	private String extractUsername() {
		return SwingUtil.extract(usernameJTextField);
	}

    // Variables declaration - do not modify
    // End of variables declaration

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">
    private void initSessionLoginComponents() {
        javax.swing.JButton cancelJButton;
        javax.swing.JLabel fillJLabel_0;
        javax.swing.JLabel fillJLabel_1;
        javax.swing.JLabel fillJLabel_2;
        javax.swing.JLabel fillJLabel_3;
        javax.swing.JLabel fillJLabel_4;
        java.awt.GridBagConstraints gridBagConstraints;
        javax.swing.JButton loginJButton;
        javax.swing.JLabel passwordJLabel;
        javax.swing.JCheckBox rememberPasswordJCheckBox;
        javax.swing.JLabel usernameJLabel;

        fillJLabel_0 = LabelFactory.create();
        fillJLabel_1 = LabelFactory.create();
        fillJLabel_2 = LabelFactory.create();
        fillJLabel_3 = LabelFactory.create();
        fillJLabel_4 = LabelFactory.create();
        usernameJLabel = LabelFactory.create();
        usernameJTextField = TextFactory.create();
        passwordJLabel = LabelFactory.create();
        passwordJPasswordField = TextFactory.createPassword();
        rememberPasswordJCheckBox = CheckBoxFactory.create();
        cancelJButton = ButtonFactory.create();
        loginJButton = ButtonFactory.create();

        setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 0.15;
        add(fillJLabel_0, gridBagConstraints);

        fillJLabel_1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        add(fillJLabel_1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        add(fillJLabel_2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(21, 34, 21, 34);
        add(fillJLabel_3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 0.85;
        add(fillJLabel_4, gridBagConstraints);

        usernameJLabel.setText(getString("usernameJLabel"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(usernameJLabel, gridBagConstraints);

        if(preferences.isSetUsername()) {
        	usernameJTextField.setText(preferences.getUsername());
        	usernameJTextField.setEnabled(false);
        }
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(usernameJTextField, gridBagConstraints);

        passwordJLabel.setText(getString("passwordJLabel"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        add(passwordJLabel, gridBagConstraints);

        passwordJPasswordField.addActionListener(new ActionListener() {
			public void actionPerformed(final ActionEvent e) { runLogin(); }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(passwordJPasswordField, gridBagConstraints);

        rememberPasswordJCheckBox.setText(getString("rememberPasswordJCheckBox"));
        rememberPasswordJCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rememberPasswordJCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rememberPasswordJCheckBox.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(rememberPasswordJCheckBox, gridBagConstraints);

        cancelJButton.setText(getString("cancelJButton"));
        cancelJButton.addActionListener(new ActionListener() {
			public void actionPerformed(final ActionEvent e) { runCancel(); }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        add(cancelJButton, gridBagConstraints);

        loginJButton.setText(getString("loginJButton"));
        loginJButton.addActionListener(new ActionListener() {
			public void actionPerformed(final ActionEvent e) { runLogin(); }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(loginJButton, gridBagConstraints);

    }// </editor-fold>
   
    private void runCancel() { getController().displayMainBrowserAvatar(); }

    private void runLogin() {
    	final StringBuffer buffer = new StringBuffer();
    	PropertiesUtil.print(buffer, System.getProperties());
    	logger.debug(buffer);
    	final SessionListener sessionListener = new SessionListener() {
			public void sessionEstablished() {
				// should display an inline success message to user
				// and wait for 3 s.
				runCancel();
			}
			public void sessionTerminated() {}
			public void sessionTerminated(Throwable cause) {}
    	};
    	sessionModel.addListener(sessionListener);
    	try { sessionModel.login(extractUsername(), extractPassword()); }
    	catch(ParityException px) {
    		// NOTE Error Handler Code
    		logger.error("", px);
    	}
    	sessionModel.removeListener(sessionListener);
    }
}
