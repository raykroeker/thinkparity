/*
 * Created On:  October 7, 2006, 1:34 PM
 */
package com.thinkparity.ophelia.browser.application.browser.display.renderer.tab.panel;

import javax.swing.ListCellRenderer;

import com.thinkparity.ophelia.browser.Constants.Colors;
import com.thinkparity.ophelia.browser.application.browser.display.renderer.tab.DefaultTabPanel;

/**
 * <b>Title:</b>thinkParity Version Content Cell Renderer<br>
 * <b>Description:</b>A cell renderer for the eastern list within the versions
 * panel.<br>
 * 
 * @author raymond@thinkparity.com
 * @version 1.1.2.1
 */
public class EastCellRenderer extends DefaultCellRenderer implements PanelCellRenderer, ListCellRenderer {

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final javax.swing.JLabel additionalTextJLabel = new javax.swing.JLabel();
    private final javax.swing.JLabel iconJLabel = new javax.swing.JLabel();
    private final javax.swing.JLabel textJLabel = new javax.swing.JLabel();
    // End of variables declaration//GEN-END:variables

    /**
     * Create a EastCellRenderer
     */
    public EastCellRenderer() {
        super();
        initComponents();
    }
    
    /**
     * Create EastCellRenderer.
     * 
     */
    public EastCellRenderer(final DefaultTabPanel tabPanel) {
        super(tabPanel);
        initComponents();
        installListeners();
    }
    
    /**
     * Get the icon JLabel
     */
    protected javax.swing.JLabel getIconJLabel() {
        return iconJLabel;
    }
    
    /**
     * Get the text JLabel
     */
    protected javax.swing.JLabel getTextJLabel() {
        return textJLabel;
    }
    
    /**
     * Get the additional text JLabel
     */
    protected javax.swing.JLabel getAdditionalTextJLabel() {
        return additionalTextJLabel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        setLayout(new java.awt.GridBagLayout());

        setMaximumSize(new java.awt.Dimension(32767, 24));
        setMinimumSize(new java.awt.Dimension(20, 24));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(20, 24));
        iconJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/IconDraft.png")));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 5);
        add(iconJLabel, gridBagConstraints);

        textJLabel.setText("!East Cell Text!");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        add(textJLabel, gridBagConstraints);

        additionalTextJLabel.setForeground(Colors.Browser.List.INNER_LIST_SELECTION_BORDER);
        additionalTextJLabel.setText("!East Cell Additional Text!");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(additionalTextJLabel, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents
}
