<?xml version="1.0"?>
<project name="calpurnia" default="help" basedir=".">
    <property name="build.sysclasspath" value="ignore"/>

    <!-- build configuration -->
    <property environment="env"/>
    <tstamp>
        <format property="build.id" pattern="yyyy-MM-dd HH:mm:ss Z" timezone="PST"/>
    </tstamp>
    <!-- local configuration  -->
    <property file="local.properties"/>

    <!-- project configuration -->
    <property name="project.name" value="${ant.project.name}"/>
    <property name="project.version" value="1.0.0-RC32"/>

    <!-- cvs configuration -->
    <property name="cvs.compressionlevel" value="9"/>
    <property name="cvs.cvsroot" value=":pserver:${scm.credentials}@tpdev.thinkparity.com:2401/home/cvs/repositories/thinkparity.com"/>
    <property name="cvs.branch" value="v1_0"/>
    <property name="cvs.modules" value="vendor/ant/1.7.0"/>

    <!-- javac configuration -->
    <property name="javac.compilerarg" value="-Xlint:deprecation -Xlint:unchecked"/>

    <!-- output directories -->
    <property name="target.dir" value="${basedir}/target"/>
    <property name="target.classes.dir" value="${target.dir}/classes"/>
    <property name="target.javadoc.dir" value="${target.dir}/docs/api"/>
    <property name="target.test-javadoc.dir" value="${target.dir}/test-docs/api"/>
    <property name="target.test-classes.dir" value="${target.dir}/test-classes"/>
    <property name="target.test-report.dir" value="${target.dir}/test-report"/>
    <property name="target.test-sessions.dir" value="${target.dir}/test-sessions"/>

    <!-- compile classpath -->
    <path id="compile.classpath">
        <pathelement location="${target.classes.dir}"/>

        <pathelement location="${basedir}/vendor/ant/1.7.0/ant.jar"/>
    </path>
    <!-- runtime classpath -->
    <path id="runtime.classpath">
    </path>
    <!-- test compile classpath -->
    <path id="test.classpath">
        <path refid="runtime.classpath"/>
        <pathelement location="${target.test-classes.dir}"/>
    </path>

    <!-- build -->
    <target name="build" depends="compile,javadoc">
        <property name="build.name" value="${target.dir}/${project.name}-${project.version}"/>
        <jar destfile="${build.name}.jar" duplicate="fail" update="false"
                whenempty="fail">
            <manifest/>
            <fileset dir="${target.classes.dir}"/>
            <fileset file="${basedir}/LICENSE.txt"/>
            <fileset file="${basedir}/README.txt"/>
        </jar>
        <jar destfile="${build.name}-sources.jar" duplicate="fail" update="false"
                whenempty="fail">
            <manifest/>
            <fileset dir="${basedir}/src/main/java"/>
            <fileset file="${basedir}/LICENSE.txt"/>
            <fileset file="${basedir}/README.txt"/>
        </jar>
        <jar destfile="${build.name}-javadoc.jar" duplicate="fail" update="false"
                whenempty="fail">
            <manifest/>
            <fileset dir="${target.javadoc.dir}"/>
            <fileset file="${basedir}/LICENSE.txt"/>
            <fileset file="${basedir}/README.txt"/>
        </jar>
        <checksum algorithm="MD5" file="${build.name}.jar" fileext=".md5"/>
        <checksum algorithm="SHA" file="${build.name}.jar" fileext=".sha"/>
        <checksum algorithm="MD5" file="${build.name}-sources.jar" fileext=".md5"/>
        <checksum algorithm="SHA" file="${build.name}-sources.jar" fileext=".sha"/>
        <checksum algorithm="MD5" file="${build.name}-javadoc.jar" fileext=".md5"/>
        <checksum algorithm="SHA" file="${build.name}-javadoc.jar" fileext=".sha"/>
    </target>

    <!-- checkout -->
    <target name="checkout">
        <echo message="${cvs.compressionlevel}"/>
        <echo message="${cvs.cvsroot}"/>
        <echo message="${cvs.branch}"/>
        <echo message="${cvs.modules}"/>
        <sleep seconds="3"/>
        <!-- source trees -->
        <cvs cvsroot="${cvs.cvsroot}"
            command="checkout" compressionlevel="${cvs.compressionlevel}"
            tag="${cvs.branch}" package="${cvs.modules}" dest="${basedir}"/>
    </target>

    <!-- install -->
    <target name="install" depends="build">
        <property name="build.name" value="${target.dir}/${project.name}-${project.version}"/>
        <copy todir="${ant.home}/lib">
            <fileset file="${build.name}.jar"/>
        </copy>
    </target>

    <!-- delete output -->
    <target name="clean">
        <delete dir="${target.dir}"/>
    </target>

    <!-- compile -->
    <target name="compile" depends="init,process-resources">
        <javac srcdir="${basedir}/src/main/java"
                destdir="${target.classes.dir}" debug="${compile.innerdebug}">
            <classpath refid="compile.classpath"/>
            <compilerarg line="${javac.compilerarg}"/>
        </javac>
    </target>

    <!-- print help -->
    <target name="help">
        <echo>
Options:
Targets:
    clean                       Delete output.
    compile                     Compile source.
    javadoc                     Generate javadoc (html) documentation.
    process-resources           Process resources.
    test                        Run tests.
    test-compile                Compile test source.
    test-process-resources      Process test resources.
        </echo>
    </target>

    <!-- initialize output -->
    <target name="init">
        <mkdir dir="${target.classes.dir}"/>
        <mkdir dir="${target.javadoc.dir}"/>
        <mkdir dir="${target.test-javadoc.dir}"/>
        <mkdir dir="${target.test-classes.dir}"/>
        <mkdir dir="${target.test-report.dir}"/>

        <property name="compile.innerdebug" value="true"/>
        <echo>Build Configuration:
    compile.debug:            ${compile.innerdebug}</echo>
    </target>

    <!-- javadoc -->
    <target name="javadoc">
        <javadoc access="private" classpathref="compile.classpath"
                destdir="${target.javadoc.dir}"
                doctitle="thinkParity"
                packagenames="com.thinkparity.*"
                sourcepath="${basedir}/src/main/java">
        </javadoc>
    </target>

    <!-- test-javadoc -->
    <target name="test-javadoc">
        <javadoc access="private" classpathref="test.classpath"
                destdir="${target.test-javadoc.dir}"
                doctitle="thinkParity"
                packagenames="com.thinkparity.*"
                sourcepath="${basedir}/src/test/java">
        </javadoc>
    </target>

    <!-- process resources -->
    <target name="process-resources" depends="init">
        <copy todir="${target.classes.dir}">
            <fileset dir="${basedir}/src/main/resources"/>
        </copy>
    </target>

    <!-- test -->
    <target name="test" depends="test-compile">
        <!-- if junitx.log4j.* is not set; use defaults; otherwise use the
            values themselves -->
        <condition property="inner.junitx.log4j.level"
                value="${junitx.log4j.level}" else="INFO">
            <isset property="junitx.log4j.level"/>
        </condition>
        <condition property="inner.junitx.log4j.console"
                value="${junitx.log4j.console}" else="false">
            <isset property="junitx.log4j.console"/>
        </condition>
        <condition property="inner.test"
                value="**/${test}Test.class" else="**/*Test.class">
            <isset property="test"/>
        </condition>
        <!-- execute test -->
        <junit fork="on" forkmode="once" reloading="false"
                errorproperty="junit.didError" failureproperty="junit.didFail"
                outputtoformatters="false">
            <jvmarg value="-Djunitx.log4j.level=${inner.junitx.log4j.level}"/>
            <jvmarg value="-Djunitx.log4j.console=${inner.junitx.log4j.console}"/>
            <classpath refid="test.classpath"/>
            <formatter type="brief"/>

            <!-- execute batch tests -->
            <batchtest todir="${target.test-sessions.dir}">
                <formatter type="xml"/>
                <fileset dir="${target.test-classes.dir}" includes="${inner.test}"/>
            </batchtest>
        </junit>
        <!-- create report -->
        <delete dir="${target.test-report.dir}"/>
        <mkdir dir="${target.test-report.dir}"/>
        <junitreport todir="${target.test-report.dir}">
            <fileset dir="${target.test-sessions.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report styledir="${basedir}" format="noframes" todir="${target.test-report.dir}"/>
        </junitreport>
        <fail message="JUnit failure." if="junit.didFail"/>
        <fail message="JUnit error." if="junit.didError"/>
    </target>

    <!-- test-compile -->
    <target name="test-compile" depends="compile,test-process-resources">
        <javac srcdir="${basedir}/src/test/java"
                destdir="${target.test-classes.dir}" debug="${compile.innerdebug}">
            <classpath refid="test.classpath"/>
            <compilerarg line="${javac.compilerarg}"/>
        </javac>
    </target>

    <!-- test-process-resources -->
    <target name="test-process-resources" depends="init">
        <copy todir="${target.test-classes.dir}">
            <fileset dir="${basedir}/src/test/resources"/>
        </copy>
    </target>
</project>
