/*
 * Created On: Fri Jun 02 2006 09:19 PDT
 */
package com.thinkparity.ophelia.browser.application.browser.display.avatar.dialog;

import java.awt.event.ActionEvent;

import javax.swing.AbstractAction;

import com.thinkparity.codebase.swing.SwingUtil;


import com.thinkparity.ophelia.browser.application.browser.BrowserConstants;
import com.thinkparity.ophelia.browser.application.browser.component.ButtonFactory;
import com.thinkparity.ophelia.browser.application.browser.component.TextFactory;
import com.thinkparity.ophelia.browser.application.browser.display.avatar.AvatarId;
import com.thinkparity.ophelia.browser.platform.action.Data;
import com.thinkparity.ophelia.browser.platform.application.display.avatar.Avatar;
import com.thinkparity.ophelia.browser.platform.util.State;

/**
 *
 * @author raymond@thinkparity.com
 * @version $Revision$
 */
public class RenameAvatar extends Avatar {

    /** @see java.io.Serializable */
    private static final long serialVersionUID = 1;

    /** Creates new form RenameDialog */
    public RenameAvatar() {
        super("RenameDialog", BrowserConstants.DIALOGUE_BACKGROUND);
        initComponents();
        bindEscapeKey("Cancel", new AbstractAction() {
            /** @see java.io.Serializable */
            private static final long serialVersionUID = 1;

            /** @see javax.swing.ActionListener#actionPerformed(java.awt.event.ActionEvent) */
            public void actionPerformed(final ActionEvent e) {
                cancelJButtonActionPerformed(e);
            }
        });
        bindEnterKey("Rename", new AbstractAction() {
            /** @see java.io.Serializable */
            private static final long serialVersionUID = 1;

            /** @see javax.swing.ActionListener#actionPerformed(java.awt.event.ActionEvent) */
            public void actionPerformed(final ActionEvent e) {
                renameJButtonActionPerformed(e);
            }
        });
    }

    /**
     * Obtain the avatar id.
     * 
     * 
     * @return The avatar id.
     */
    public AvatarId getId() { return AvatarId.DIALOG_RENAME; }

    /**
     * Obtain the avatar's state information.
     * 
     * 
     * @return The avatar's state information.
     */
    public State getState() { return null; }

	/**
	 * Determine whether the user input for the frame is valid.
	 * 
	 * @return True if the input is valid; false otherwise.
	 */
    public Boolean isInputValid() {
        final String name = extractName();
        if(null != name && 0 < name.length()) { return Boolean.TRUE; }
        else { return Boolean.FALSE; }
    }

    /**
	 * Reload the avatar. This event is called when either the content provider
	 * or the input has changed; or as a manual reload of the avatar.
	 * 
	 */
    public void reload() { reloadName(); }

    /**
     * Set the avatar state.
     * 
     * 
     * @param state
     *            The avatar's state information.
     */
    public void setState(final State state) {}

    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent e) {//GEN-FIRST:event_cancelJButtonActionPerformed
        disposeWindow();
    }//GEN-LAST:event_cancelJButtonActionPerformed

    /**
     * Extract the name from the control.
     *
     * @return The name.
     */
    private String extractName() { return SwingUtil.extract(nameJTextField); }
    
    /**
     * Obtain the input artifact id.
     *
     * @return An artifact id.
     */
    private Long getInputDocumentId() {
        return (Long) ((Data) input).get(DataKey.DOCUMENT_ID);
    }

    /**
     * Obtain the input name.
     *
     * @return A name.
     */
    private String getInputDocumentName() {
        return (String) ((Data) input).get(DataKey.DOCUMENT_NAME);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        javax.swing.JButton cancelJButton;
        javax.swing.JButton renameJButton;

        nameJTextField = TextFactory.create();
        cancelJButton = ButtonFactory.create(getString("CancelButton"));
        renameJButton = ButtonFactory.create(getString("RenameButton"));

        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                cancelJButtonActionPerformed(e);
            }
        });

        renameJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                renameJButtonActionPerformed(e);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(nameJTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(cancelJButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(renameJButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(nameJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(renameJButton)
                    .add(cancelJButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /** Reload the name text control. */
    private void reloadName() {
        nameJTextField.setText("");
        if(null != input) {
            final String artifactName = getInputDocumentName();
            nameJTextField.setText(artifactName);
            nameJTextField.select(0, artifactName.length());
        }
        nameJTextField.requestFocusInWindow();
    }

    private void renameJButtonActionPerformed(java.awt.event.ActionEvent e) {//GEN-FIRST:event_renameJButtonActionPerformed
        if(isInputValid()) {
            final Long documentId = getInputDocumentId();
            final String documentName = extractName();
            getController().runRenameDocument(documentId, documentName);
            disposeWindow();
        }
    }//GEN-LAST:event_renameJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField nameJTextField;
    // End of variables declaration//GEN-END:variables

    public enum DataKey { DOCUMENT_ID, DOCUMENT_NAME }
}
