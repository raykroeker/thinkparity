/*
 * LoginJPanel.java
 *
 * Created on January 17, 2006, 4:58 PM
 */
package com.thinkparity.browser.javax.swing.session;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import org.apache.log4j.Logger;

import com.thinkparity.browser.javax.swing.AbstractJPanel;
import com.thinkparity.browser.javax.swing.browser.Controller;
import com.thinkparity.browser.javax.swing.browser.MainJPanel;
import com.thinkparity.browser.javax.swing.component.BrowserButtonFactory;
import com.thinkparity.browser.javax.swing.util.SwingUtil;
import com.thinkparity.browser.util.log4j.LoggerFactory;

import com.thinkparity.codebase.PropertiesUtil;

import com.thinkparity.model.parity.ParityException;
import com.thinkparity.model.parity.api.events.SessionListener;
import com.thinkparity.model.parity.model.session.SessionModel;
import com.thinkparity.model.parity.model.workspace.Preferences;

/**
 * 
 * 
 * @author raykroeker@gmail.com
 * @version 1.1
 */
public class LoginJPanel extends AbstractJPanel {

	/**
	 * @see java.io.Serializable
	 */
	private static final long serialVersionUID = 1;

	protected final Controller controller =
    	Controller.getInstance();

	/**
	 * Apache logger.
	 * 
	 */
	protected final Logger logger = LoggerFactory.getLogger(getClass());

	/**
	 * Parity preferences.
	 * 
	 */
	protected final Preferences preferences = getPreferences();

	/**
	 * Parity session api.
	 * 
	 */
	protected final SessionModel sessionModel = getSessionModel();

	private final MainJPanel browserJPanel;

	private javax.swing.JPasswordField passwordJPasswordField;

	private javax.swing.JTextField usernameJTextField;

    /**
     * Create a LoginJPanel.
     * 
     */
    public LoginJPanel(final MainJPanel browserJPanel) {
    	super("LoginJPanel");
    	this.browserJPanel = browserJPanel;
        initComponents();
    }

	private String extractPassword() {
		return SwingUtil.extract(passwordJPasswordField);
	}

	private String extractUsername() {
		return SwingUtil.extract(usernameJTextField);
	}

    // Variables declaration - do not modify
    // End of variables declaration

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">
    private void initComponents() {
        javax.swing.JButton cancelJButton;
        javax.swing.JLabel fillJLabel_0;
        javax.swing.JLabel fillJLabel_1;
        javax.swing.JLabel fillJLabel_2;
        javax.swing.JLabel fillJLabel_3;
        javax.swing.JLabel fillJLabel_4;
        java.awt.GridBagConstraints gridBagConstraints;
        javax.swing.JButton loginJButton;
        javax.swing.JLabel passwordJLabel;
        javax.swing.JCheckBox rememberPasswordJCheckBox;
        javax.swing.JLabel usernameJLabel;

        fillJLabel_0 = new javax.swing.JLabel();
        fillJLabel_1 = new javax.swing.JLabel();
        fillJLabel_2 = new javax.swing.JLabel();
        fillJLabel_3 = new javax.swing.JLabel();
        fillJLabel_4 = new javax.swing.JLabel();
        usernameJLabel = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        passwordJLabel = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        rememberPasswordJCheckBox = new javax.swing.JCheckBox();
        cancelJButton = BrowserButtonFactory.create("");
        loginJButton = BrowserButtonFactory.create("");

        setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 0.15;
        add(fillJLabel_0, gridBagConstraints);

        fillJLabel_1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        add(fillJLabel_1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        add(fillJLabel_2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(21, 34, 21, 34);
        add(fillJLabel_3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 0.85;
        add(fillJLabel_4, gridBagConstraints);

        usernameJLabel.setText("Parity username:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(usernameJLabel, gridBagConstraints);

        if(preferences.isSetUsername()) {
        	usernameJTextField.setText(preferences.getUsername());
        	usernameJTextField.setEnabled(false);
        }
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(usernameJTextField, gridBagConstraints);

        passwordJLabel.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        add(passwordJLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(passwordJPasswordField, gridBagConstraints);

        rememberPasswordJCheckBox.setText("Remember password");
        rememberPasswordJCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rememberPasswordJCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(rememberPasswordJCheckBox, gridBagConstraints);

        cancelJButton.setText("Cancel");
        cancelJButton.addActionListener(new ActionListener() {
			public void actionPerformed(final ActionEvent e) { runCancel(); }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        add(cancelJButton, gridBagConstraints);

        loginJButton.setText("Login");
        loginJButton.addActionListener(new ActionListener() {
			public void actionPerformed(final ActionEvent e) { runLogin(); }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(loginJButton, gridBagConstraints);

    }// </editor-fold>
   
    private void runCancel() { controller.showDocumentList(); }

    private void runLogin() {
    	final StringBuffer buffer = new StringBuffer();
    	PropertiesUtil.print(buffer, System.getProperties());
    	logger.debug(buffer);
    	final SessionListener sessionListener = new SessionListener() {
			public void sessionEstablished() {
				// should display an inline success message to user
				// and wait for 3 s.
				runCancel();
			}
			public void sessionTerminated() {}
			public void sessionTerminated(Throwable cause) {}
    	};
    	sessionModel.addListener(sessionListener);
    	try { sessionModel.login(extractUsername(), extractPassword()); }
    	catch(ParityException px) {
    		// NOTE Error Handler Code
    		// Should display an inline error label to user
    		logger.error(px);
    	}
    	sessionModel.removeListener(sessionListener);
    }
    
    

}
