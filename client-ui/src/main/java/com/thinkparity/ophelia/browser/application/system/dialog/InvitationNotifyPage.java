/*
 * InvitationNotifyPage.java
 *
 * Created on October 9, 2007, 8:32 PM
 */

package com.thinkparity.ophelia.browser.application.system.dialog;

import com.thinkparity.ophelia.browser.application.browser.BrowserConstants.Colours;
import com.thinkparity.ophelia.browser.application.browser.BrowserConstants.Fonts;
import com.thinkparity.ophelia.browser.application.browser.component.ButtonFactory;
import com.thinkparity.ophelia.browser.application.system.SystemApplication;
import com.thinkparity.ophelia.browser.application.system.dialog.Notification.NotificationType;

/**
 *
 * @author robert@thinkparity.com
 */
public class InvitationNotifyPage extends DefaultNotifyPage {

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final javax.swing.JButton acceptJButton = ButtonFactory.create();
    private final javax.swing.JButton declineJButton = ButtonFactory.create();
    private final javax.swing.JLabel messageJLabel = new javax.swing.JLabel();
    private final javax.swing.JLabel offlineJLabel = new javax.swing.JLabel();
    // End of variables declaration//GEN-END:variables

    /**
     * Create a new InvitationNotifyPage.
     * 
     * @param systemApplication
     *            The <code>SystemApplication</code>.
     */
    public InvitationNotifyPage(final SystemApplication systemApplication) {
        super(systemApplication);
        initComponents();
    }

    /**
     * @see com.thinkparity.ophelia.browser.application.system.dialog.NotifyPage#getType()
     */
    public NotificationType getType() {
        return NotificationType.INVITATION;
    }

    /**
     * @see com.thinkparity.ophelia.browser.application.system.dialog.NotifyPage#reload(com.thinkparity.ophelia.browser.application.system.dialog.Notification)
     */
    public void reload(final Notification notification) {
        super.reload(notification);
        reloadMessage();
        reloadButtons();
        reloadOfflineMessage();
    }

    private void acceptJButtonActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptJButtonActionPerformed
        final Notification currentNotification = this.notification;
        closeNotification();
        currentNotification.invokeAction();
    }//GEN-LAST:event_acceptJButtonActionPerformed

    private void decideLaterJButtonActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decideLaterJButtonActionPerformed
        closeNotification();
    }//GEN-LAST:event_decideLaterJButtonActionPerformed

    private void declineJButtonActionPerformed(final java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineJButtonActionPerformed
        final Notification currentNotification = this.notification;
        closeNotification();
        currentNotification.invokeDeclineAction();
    }//GEN-LAST:event_declineJButtonActionPerformed

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        final javax.swing.JButton decideLaterJButton = ButtonFactory.create();

        setOpaque(false);
        messageJLabel.setFont(Fonts.DialogFont);
        messageJLabel.setText("!Invitation Message!");
        messageJLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        offlineJLabel.setFont(Fonts.DialogFont);
        offlineJLabel.setForeground(Colours.DIALOG_ERROR_TEXT_FG);
        offlineJLabel.setText("!Offline Message!");

        acceptJButton.setFont(Fonts.DialogButtonFont);
        acceptJButton.setText(java.util.ResourceBundle.getBundle("localization/Browser_Messages").getString("SystemApplication.NotifyPage.Invitation.Accept"));
        acceptJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptJButtonActionPerformed(evt);
            }
        });

        declineJButton.setFont(Fonts.DialogButtonFont);
        declineJButton.setText(java.util.ResourceBundle.getBundle("localization/Browser_Messages").getString("SystemApplication.NotifyPage.Invitation.Decline"));
        declineJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineJButtonActionPerformed(evt);
            }
        });

        decideLaterJButton.setFont(Fonts.DialogButtonFont);
        decideLaterJButton.setText(java.util.ResourceBundle.getBundle("localization/Browser_Messages").getString("SystemApplication.NotifyPage.Invitation.DecideLater"));
        decideLaterJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decideLaterJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(acceptJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(declineJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(decideLaterJButton))
                    .addComponent(messageJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .addComponent(offlineJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {acceptJButton, declineJButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(offlineJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decideLaterJButton)
                    .addComponent(declineJButton)
                    .addComponent(acceptJButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Reload the buttons.
     */
    private void reloadButtons() {
        acceptJButton.setEnabled(isOnline());
        declineJButton.setEnabled(isOnline());
    }

    /**
     * Reload the message.
     */
    private void reloadMessage() {
        messageJLabel.setText(notification.getMessage());
    }

    /**
     * Reload the offline message.
     */
    private void reloadOfflineMessage() {
        offlineJLabel.setText(isOnline() ? " " : systemApplication.getString("Notification.ErrorOffline"));
    }
}
