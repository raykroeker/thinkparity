/*
 * SearchPartner.java
 *
 * Created on April 1, 2006, 11:28 AM
 */

package com.thinkparity.browser.application.browser.display.avatar.contact;

import java.awt.Color;

import javax.swing.DefaultListModel;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentListener;

import com.thinkparity.browser.application.browser.component.ButtonFactory;
import com.thinkparity.browser.application.browser.component.LabelFactory;
import com.thinkparity.browser.application.browser.component.ListFactory;
import com.thinkparity.browser.application.browser.component.TextFactory;
import com.thinkparity.browser.application.browser.display.avatar.AvatarId;
import com.thinkparity.browser.application.browser.display.avatar.session.ContactCellRenderer;
import com.thinkparity.browser.platform.application.display.avatar.Avatar;
import com.thinkparity.browser.platform.util.State;

/**
 *
 * @author raykroeker@gmail.com
 */
public class SearchPartner extends Avatar {

    /**
     * @see java.io.Serializable
     *
     */
    private static final long serialVersionUID = 1;

    private DefaultListModel contactsModel;

    /**
     * Creates new form SearchPartner
     */
    public SearchPartner() {
        super("SearchPartner", Color.WHITE);
        initComponents();
    }

    /**
     * Set the avatar state.
     * 
     * 
     * @param state
     *            The avatar's state information.
     */
    public void setState(final State state) {}

    /**
     * Obtain the avatar's state information.
     * 
     * 
     * @return The avatar's state information.
     */
    public State getState() { return null; }

    /**
     * Obtain the avatar id.
     * 
     * 
     * @return The avatar id.
     */
    public AvatarId getId() { return AvatarId.SESSION_SEARCH_PARTNER; }

    public void reload() {
        reloadAddJButton();
        reloadSearchJButton();
    }

    private void disposeWindow() {
        SwingUtilities.getWindowAncestor(this).dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        javax.swing.JScrollPane contactsJScrollPane;
        javax.swing.JLabel eaJLabel;

        eaJLabel = LabelFactory.create(getString("EmbeddedAssistance"));
        contactsJScrollPane = new javax.swing.JScrollPane();
        contactsJList = ListFactory.create();
        searchJTextField = TextFactory.create();
        searchJButton = ButtonFactory.create(getString("SearchButton"));
        addJButton = ButtonFactory.create(getString("AddButton"));

        eaJLabel.setText("!Embedded Assistance!");

        contactsModel = new DefaultListModel();
        contactsJList.setModel(contactsModel);
        contactsJList.setCellRenderer(new ContactCellRenderer());
        contactsJList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent e) {
                contactsJListValueChanged(e);
            }
        });

        contactsJScrollPane.setViewportView(contactsJList);

        searchJTextField.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(final javax.swing.event.DocumentEvent e) {
                searchJTextFieldInsertUpdate(e);
            }
            public void removeUpdate(final javax.swing.event.DocumentEvent e) {
                searchJTextFieldRemoveUpdate(e);
            }
            public void changedUpdate(final javax.swing.event.DocumentEvent e) {
                searchJTextFieldChangedUpdate(e);
            }
        });

        searchJButton.setText("!Search!");
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                searchJButtonActionPerformed(e);
            }
        });

        addJButton.setText("!Add!");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                addJButtonActionPerformed(e);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(contactsJScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                    .add(eaJLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(searchJTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(searchJButton)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(addJButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(eaJLabel)
                .add(6, 6, 6)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(searchJButton)
                    .add(searchJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(addJButton)
                        .add(127, 127, 127))
                    .add(layout.createSequentialGroup()
                        .add(contactsJScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void contactsJListValueChanged(javax.swing.event.ListSelectionEvent e) {//GEN-FIRST:event_contactsJListValueChanged
        reloadAddJButton();
    }//GEN-LAST:event_contactsJListValueChanged

    private void reloadSearchJButton() {
        searchJButton.setEnabled(0 < searchJTextField.getText().length());
    }

    private void reloadAddJButton() {
        addJButton.setEnabled(!contactsJList.isSelectionEmpty());
    }

    private void addJButtonActionPerformed(java.awt.event.ActionEvent e) {//GEN-FIRST:event_addJButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_addJButtonActionPerformed

    private void searchJButtonActionPerformed(java.awt.event.ActionEvent e) {//GEN-FIRST:event_searchJButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_searchJButtonActionPerformed

    private void searchJTextFieldInsertUpdate(final javax.swing.event.DocumentEvent e) {
        reloadSearchJButton();
    }

    private void searchJTextFieldChangedUpdate(final javax.swing.event.DocumentEvent e) {
        reloadSearchJButton();
    }

    private void searchJTextFieldRemoveUpdate(final javax.swing.event.DocumentEvent e) {
        reloadSearchJButton();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JList contactsJList;
    private javax.swing.JButton searchJButton;
    private javax.swing.JTextField searchJTextField;
    // End of variables declaration//GEN-END:variables
}
